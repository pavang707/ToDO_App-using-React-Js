{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","firstrender","useRef","useState","inputvalue","setinputvalue","todo","settodo","useEffect","current","localStorage","setItem","JSON","stringify","getItem","newtodo","parse","className","onSubmit","e","preventDefault","trim","text","id","uuidv4","type","placeholder","value","onChange","target","map","todos","onClick","itemid","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAwDeA,EArDL,WACR,IAAMC,EAAYC,kBAAO,GADZ,EAEoBC,mBAAS,IAF7B,mBAENC,EAFM,KAEKC,EAFL,OAGQF,mBAAS,IAHjB,mBAGNG,EAHM,KAGDC,EAHC,KA8Bb,OAdCC,qBAAU,WACNP,EAAYQ,QACbR,EAAYQ,SAAQ,EAIpBC,aAAaC,QAAQ,OAAOC,KAAKC,UAAL,YAAmBP,OAEhD,CAACA,IACHE,qBAAU,WACR,GAAkC,OAA/BE,aAAaI,QAAQ,QAAe,CACvC,IAAMC,EAAQL,aAAaI,QAAQ,QACnCP,EAAQK,KAAKI,MAAL,sBAAeV,GAAf,CAAoBS,SAC5B,IAED,qBAAKE,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACE,uBAAMC,SA7BG,SAACC,GACZA,EAAEC,iBACuB,KAAtBhB,EAAWiB,SACdd,EAAQ,GAAD,mBAAKD,GAAL,CAAU,CACfgB,KAAKlB,EACLmB,GAAGC,kBAELnB,EAAc,MAsBZ,UACE,uBACAoB,KAAK,OACLC,YAAY,YACZC,MAAOvB,EACPwB,SAAU,SAACT,GAAD,OAAKd,EAAcc,EAAEU,OAAOF,UAEtC,wBAAQF,KAAK,SAAb,oBAEAnB,EAAKwB,KAAI,SAAAC,GAAQ,OAChB,sBAAoBd,UAAU,OAA9B,UACE,4BAAIc,EAAMT,OACV,mBAAGL,UAAU,mBAAmBe,QAAS,kBAhCjCC,EAgCgDF,EAAMR,QA/BrEhB,EAAQD,EAAK4B,QAAO,SAACC,GAAD,OAAQA,EAAKZ,KAAKU,MADxB,IAACA,OA8BAF,EAAMR,aClCXa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56cb5946.chunk.js","sourcesContent":["import './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React,{useState,useEffect,useRef} from 'react'\nconst App=()=> {\n  const firstrender=useRef(true)\n  const [inputvalue,setinputvalue]=useState('')\n  const [todo,settodo]=useState([])\n  const addtodo=(e)=>{\n     e.preventDefault();\n     if(inputvalue.trim() === \"\") return;\n     settodo([...todo,{\n       text:inputvalue,\n       id:uuidv4()\n     }])\n     setinputvalue('')\n  }\n  const deletetodo=(itemid)=>{\n     settodo(todo.filter((item)=>item.id!==itemid))\n }\n   useEffect(()=>{\n    if(firstrender.current){\n      firstrender.current=false;\n      \n    }\n    else{\n      localStorage.setItem('ToDo',JSON.stringify([...todo]))\n    }\n   },[todo])\n   useEffect(()=>{\n     if(localStorage.getItem(\"ToDo\")!==null){\n     const newtodo=localStorage.getItem(\"ToDo\")\n     settodo(JSON.parse([...todo,newtodo]))}\n   },[])\n  return (\n    <div className=\"App\">\n     <div className=\"container\">\n       <form onSubmit={addtodo}>\n         <input \n         type=\"text\"\n         placeholder=\"Add To Do\"\n         value={inputvalue}\n         onChange={(e)=>setinputvalue(e.target.value)}\n         />\n         <button type=\"submit\">Add</button>\n        </form>\n        {todo.map(todos=>{return(\n          <div key={todos.id} className=\"todo\">\n            <p>{todos.text}</p>\n            <i className=\"far fa-trash-alt\" onClick={()=>deletetodo(todos.id)}></i>\n          </div>)\n        })}\n       </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}